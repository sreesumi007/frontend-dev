/* tslint:disable */
/* eslint-disable */
/**
 * MathGrass
 * This is the OpenAPI specification for MathGrass
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: andreas.domanowski@tu-dresden.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TaskResultDTO
 */
export interface TaskResultDTO {
    /**
     * 
     * @type {number}
     * @memberof TaskResultDTO
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof TaskResultDTO
     */
    task?: number;
    /**
     * 
     * @type {string}
     * @memberof TaskResultDTO
     */
    answer?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskResultDTO
     */
    submissionDate?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskResultDTO
     */
    evaluationDate?: string;
    /**
     * 
     * @type {boolean}
     * @memberof TaskResultDTO
     */
    answerTrue?: boolean;
}

/**
 * Check if a given object implements the TaskResultDTO interface.
 */
export function instanceOfTaskResultDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TaskResultDTOFromJSON(json: any): TaskResultDTO {
    return TaskResultDTOFromJSONTyped(json, false);
}

export function TaskResultDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskResultDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'task': !exists(json, 'task') ? undefined : json['task'],
        'answer': !exists(json, 'answer') ? undefined : json['answer'],
        'submissionDate': !exists(json, 'submissionDate') ? undefined : json['submissionDate'],
        'evaluationDate': !exists(json, 'evaluationDate') ? undefined : json['evaluationDate'],
        'answerTrue': !exists(json, 'answerTrue') ? undefined : json['answerTrue'],
    };
}

export function TaskResultDTOToJSON(value?: TaskResultDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'task': value.task,
        'answer': value.answer,
        'submissionDate': value.submissionDate,
        'evaluationDate': value.evaluationDate,
        'answerTrue': value.answerTrue,
    };
}

