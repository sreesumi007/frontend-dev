/* tslint:disable */
/* eslint-disable */
/**
 * MathGrass
 * This is the OpenAPI specification for MathGrass
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: andreas.domanowski@tu-dresden.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { VertexDTO } from './VertexDTO';
import {
    VertexDTOFromJSON,
    VertexDTOFromJSONTyped,
    VertexDTOToJSON,
} from './VertexDTO';

/**
 * 
 * @export
 * @interface EdgeDTO
 */
export interface EdgeDTO {
    /**
     * 
     * @type {VertexDTO}
     * @memberof EdgeDTO
     */
    firstVertex: VertexDTO;
    /**
     * 
     * @type {VertexDTO}
     * @memberof EdgeDTO
     */
    secondVertex: VertexDTO;
    /**
     * 
     * @type {string}
     * @memberof EdgeDTO
     */
    label?: string;
}

/**
 * Check if a given object implements the EdgeDTO interface.
 */
export function instanceOfEdgeDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "firstVertex" in value;
    isInstance = isInstance && "secondVertex" in value;

    return isInstance;
}

export function EdgeDTOFromJSON(json: any): EdgeDTO {
    return EdgeDTOFromJSONTyped(json, false);
}

export function EdgeDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): EdgeDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'firstVertex': VertexDTOFromJSON(json['firstVertex']),
        'secondVertex': VertexDTOFromJSON(json['secondVertex']),
        'label': !exists(json, 'label') ? undefined : json['label'],
    };
}

export function EdgeDTOToJSON(value?: EdgeDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'firstVertex': VertexDTOToJSON(value.firstVertex),
        'secondVertex': VertexDTOToJSON(value.secondVertex),
        'label': value.label,
    };
}

