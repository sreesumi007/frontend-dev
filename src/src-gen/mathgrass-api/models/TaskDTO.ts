/* tslint:disable */
/* eslint-disable */
/**
 * MathGrass
 * This is the OpenAPI specification for MathGrass
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: andreas.domanowski@tu-dresden.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GraphDTO } from './GraphDTO';
import {
    GraphDTOFromJSON,
    GraphDTOFromJSONTyped,
    GraphDTOToJSON,
} from './GraphDTO';
import type { QuestionDTO } from './QuestionDTO';
import {
    QuestionDTOFromJSON,
    QuestionDTOFromJSONTyped,
    QuestionDTOToJSON,
} from './QuestionDTO';

/**
 * 
 * @export
 * @interface TaskDTO
 */
export interface TaskDTO {
    /**
     * 
     * @type {number}
     * @memberof TaskDTO
     */
    id: number;
    /**
     * 
     * @type {GraphDTO}
     * @memberof TaskDTO
     */
    graph: GraphDTO;
    /**
     * 
     * @type {QuestionDTO}
     * @memberof TaskDTO
     */
    question: QuestionDTO;
}

/**
 * Check if a given object implements the TaskDTO interface.
 */
export function instanceOfTaskDTO(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "graph" in value;
    isInstance = isInstance && "question" in value;

    return isInstance;
}

export function TaskDTOFromJSON(json: any): TaskDTO {
    return TaskDTOFromJSONTyped(json, false);
}

export function TaskDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'graph': GraphDTOFromJSON(json['graph']),
        'question': QuestionDTOFromJSON(json['question']),
    };
}

export function TaskDTOToJSON(value?: TaskDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'graph': GraphDTOToJSON(value.graph),
        'question': QuestionDTOToJSON(value.question),
    };
}

